@{
    ViewData["Title"] = "Home Page";
}

<h2>JWT Token Generator</h2>

<div id="qrCodeImgPlaceholder"></div>

<div class="card bg-warning mb-3" style="max-width: 18rem;">
    <div class="card-header">Click QR code to refresh</div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.9/signalr.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@@zxing/library@0.18.6/umd/index.min.js"></script>
    <script type="text/javascript" async>
        const barcodeGenerateUrl = '/Auth/Generate2DBarcode';
        const placeholderId = 'qrCodeImgPlaceholder';
        const buttonId = 'generateQrCodeBtn';

        function addBase64ImageToPlaceholder(base64String, phName) {
            var img = document.createElement("img");
            img.src = 'data:image/png;base64,' + base64String;
            img.className = 'qrCode';

            var placeholder = document.getElementById(phName);
            placeholder.innerHTML = "";
            placeholder.appendChild(img);
            placeholder.className = 'qrCodePlaceholder';

            return img;
        }

        async function onQrCodeRefresh() {
            try {
                var response = await fetch(barcodeGenerateUrl);
                var respText = await response.text();
                var img = addBase64ImageToPlaceholder(respText, placeholderId);
            } catch (error) {
                console.error("Error fetching QR code:", error);
                alert("Failed to retrieve QR code.");
            }
        }

        function connectSignalR() {
            // Uspostavljanje veze sa SignalR hubom
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/authHub") // URL vašeg SignalR huba
                .configureLogging(signalR.LogLevel.Information)
                .build();

            connection.start().then(function () {
                console.log("Connected!");
            }).catch(function (err) {
                return console.error(err.toString());
            });

            connection.on("ReceiveTokens", (jwtToken, refreshToken) => {
                console.log("Primljeni tokeni:", jwtToken, refreshToken);

                // Pohrana tokena u kolačić
                document.cookie = `jwtToken=${jwtToken}; path=/`;
                console.log("JWT token stored in cookie");

                // Pohrana refresh tokena u localStorage
                localStorage.setItem("refreshToken", refreshToken);
                console.log("RefreshToken stored to localStorage");

                // Nakon što su tokeni pohranjeni, preusmjerite na landing stranicu
                fetch('/landing', {
                    method: 'GET',
                    credentials: 'include' // Uključivanje kolačića u zahtjev
                })
                    .then(response => {
                        if (response.ok) {
                            console.log("Access to landing page granted.");
                            // Redirect to the landing page or display it
                            window.location.href = '/landing';
                        } else {
                            console.error("Access denied.");
                        }
                    })
                    .catch(error => {
                        console.error("Error accessing landing page:", error);
                    });

            });
        }

        function onDomContentLoaded() {
            if (typeof ZXing !== 'undefined') {
                console.log("ZXing library is loaded successfully!");
            } else {
                console.error("ZXing library failed to load.");
            }

            onQrCodeRefresh();
        }

        // Za ZXing load logiranje 
        document.addEventListener("DOMContentLoaded", onDomContentLoaded);

        // Slušanje poruka sa huba
        connectSignalR();

        // Klik na gumb za generiranje i prikaz QR koda
        document.getElementById(placeholderId).addEventListener("click", onQrCodeRefresh);

    </script>
}

